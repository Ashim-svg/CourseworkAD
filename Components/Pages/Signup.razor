@page "/signup"
@using CourseworkAD.Models
@inject NavigationManager NavigationManager
@inject UserService UserService

<div class="signup-page-container d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="signup-box bg-white shadow p-4 rounded">
        <h3 class="text-center text-primary mb-4">Signup</h3>

        @if (!string.IsNullOrEmpty(AlertMessage))
        {
            <div class="alert @AlertClass" role="alert">
                @AlertMessage
            </div>
        }

        <EditForm Model="signupModel" OnValidSubmit="HandleSignup">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="username" class="form-label">Username:</label>
                <InputText id="username" class="form-control" @bind-Value="signupModel.Username" required />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="signupModel.Password" required />
            </div>
            <div class="mb-3">
                <label for="preferredCurrency" class="form-label">Preferred Currency:</label>
                <InputSelect id="preferredCurrency" class="form-control" @bind-Value="signupModel.PreferredCurrency" required>
                    <option value="">Select Currency</option>
                    <option value="USD">USD - United States Dollar</option>
                    <option value="NPR">NPR - Nepalese Rupee</option>
                    <option value="EUR">EUR - Euro</option>
                    <option value="GBP">GBP - British Pound</option>
                    <option value="INR">INR - Indian Rupee</option>
                    <option value="JPY">JPY - Japanese Yen</option>
                    <!-- Add more currencies if needed -->
                </InputSelect>
            </div>
            <button type="submit" class="btn btn-primary w-100">Signup</button>
        </EditForm>

        <p class="text-center mt-3">
            Already have an account? <a @onclick="NavigateToLogin" class="text-primary" style="cursor: pointer;">Login here</a>
        </p>
    </div>
</div>

@code {
    private User signupModel = new();
    private string AlertMessage = string.Empty;
    private string AlertClass = string.Empty;

    private void HandleSignup()
    {
        try
        {
            var users = UserService.LoadUsers();

            // Check if username already exists
            if (users.Any(u => u.Username.Equals(signupModel.Username, StringComparison.OrdinalIgnoreCase)))
            {
                AlertMessage = "Username already exists. Please choose a different one.";
                AlertClass = "alert-danger";
                return;
            }

            // Validate preferred currency
            if (string.IsNullOrEmpty(signupModel.PreferredCurrency))
            {
                AlertMessage = "Please select a preferred currency.";
                AlertClass = "alert-danger";
                return;
            }

            // Hash the password and save the user
            signupModel.Password = UserService.HashPassword(signupModel.Password);
            users.Add(signupModel);
            UserService.SaveUsers(users);

            AlertMessage = "Signup successful! Redirecting to the login page...";
            AlertClass = "alert-success";

            Task.Delay(2000).ContinueWith(_ =>
            {
                InvokeAsync(() => NavigationManager.NavigateTo("/"));
            });
        }
        catch (Exception ex)
        {
            AlertMessage = $"An error occurred: {ex.Message}";
            AlertClass = "alert-danger";
        }
    }

    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/");
    }
}
